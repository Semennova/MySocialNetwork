{"version":3,"sources":["components/common/Paginator/Paginator.module.css","components/Users/Users.module.css","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","totalCount","pageSize","currentPage","onPageChange","portionSize","useState","portionNumber","setPortionNumber","pagesCount","Math","ceil","leftPortionPageNumber","rightPortionPageNumber","portionCount","pages","i","push","onClick","filter","p","map","className","s","selectedPage","pageNum","User","user","followingInProgress","follow","unfollow","flex","PhotoSpan","to","id","alt","src","photos","small","defaultPhoto","img","followed","disabled","some","btn","textSpan","name","status","Users","users","requestUsers","props","u","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","getPortionSize","UsersContainer","pageNumber","this","Loader","React","Component","compose","connect","setCurrentPage","toggleFollowingProgress"],"mappings":"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","file":"static/js/3.9e840164.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__rPCen\",\"pageNum\":\"Paginator_pageNum__h7FKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"Users_flex__2BH2L\",\"img\":\"Users_img__WkgNn\",\"btn\":\"Users_btn__2ALvX\",\"textSpan\":\"Users_textSpan__DOEyf\"};","import React, { useState, useEffect } from 'react'\nimport s from '../Paginator/Paginator.module.css'\n\nlet Paginator = ({totalCount, pageSize, currentPage, onPageChange, portionSize = 10}) => {\n    const [portionNumber, setPortionNumber] = useState(1);\n    let pagesCount = Math.ceil(totalCount / pageSize);\n\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n \n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let pages = [];\n    for(let i=1; i<=pagesCount; i++){\n        pages.push(i);\n\n\n}\n    \n    return <div>\n\n        {portionNumber > 1 && \n        <button onClick={()=> {setPortionNumber(portionNumber - 1)}}>PREV</button>}\n\n        {pages\n        .filter((p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n        .map((p) => {\n            return <span className={currentPage === p ? s.selectedPage : s.pageNum} onClick={()=> onPageChange(p)}>{p}</span>\n        })}\n\n        {portionCount > portionNumber && \n        <button onClick={()=> {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\n\n        </div>\n}\n\nexport default Paginator\n\n\n\n\n\n\n\n\n\n\n                    ","import React from 'react'\nimport s from './Users.module.css'\nimport defaultPhoto from '../../assets/img/defaultPhoto.jpg'\nimport { NavLink } from 'react-router-dom';\n\n\nlet User = ({user, followingInProgress, follow, unfollow}) => {\n    return <div className={s.flex}>\n                <span className={s.PhotoSpan}>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img alt=\"user-avatar\" src={user.photos.small != null ? user.photos.small : defaultPhoto} className={s.img}/>\n                    </NavLink>\n                    \n                        {user.followed ? \n                        <button disabled={followingInProgress.some(id => id === user.id)} onClick={()=> {\n                            unfollow(user.id)\n                        }} className={s.btn}>Unfollow</button> \n                        \n                        :\n\n                        <button disabled={followingInProgress.some(id => id === user.id)} onClick={()=> {\n                           follow(user.id)\n                 \n                }} className={s.btn}>Follow</button>\n                }\n                        \n                \n                </span>\n                <span className={s.textSpan}>\n                    <span>\n                        <div>Name: {user.name}</div>\n                     \n                        <div>Status: {user.status}</div>\n                    </span>\n                    <span>\n                        <div>Country: {'u.location.country'}</div>\n                        <div>City: {'u.location.city'}</div>\n                    </span> \n                 </span>\n            </div>\n       \n\n}\n\nexport default User\n\n\n\n\n\n\n                    ","import React, { useState } from 'react';\nimport Paginator from '../common/Paginator/Paginator';\nimport User from './User';\n\nlet Users = ({currentPage, totalCount, pageSize, onPageChange, users, portionSize, requestUsers, ...props}) => {\n\n\n    return <div>\n       <Paginator currentPage={currentPage} onPageChange={onPageChange} pageSize={pageSize} totalCount={totalCount} portionSize={portionSize} requestUsers={requestUsers}/>\n\n\n      {users.map(u => <User user={u} \n                                key={u.id}  \n                                followingInProgress={props.followingInProgress} \n                                unfollow={props.unfollow} \n                                follow={props.follow}\n                                requestUsers={props.requestUsers}\n                                />\n                               \n                                )\n        }\n</div> \n}\n\nexport default Users\n\n\n\n\n\n\n\n                    ","\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getPortionSize = (state) => {\r\n    return state.usersPage.portionSize\r\n}\r\n","import React from 'react'\nimport Users from './Users'\nimport { connect } from 'react-redux'\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer'\nimport Loader from '../Loader/Loader'\nimport { compose } from 'redux'\nimport { getUsers, getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getPortionSize } from '../../redux/users-selectors'\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount(){\n        let {currentPage, pageSize} = this.props\n        this.props.requestUsers(currentPage, pageSize)\n    }\n\n    onPageChange = (pageNumber) => {\n        let {pageSize} = this.props;\n        this.props.requestUsers(pageNumber, pageSize)\n    }\n\n    render() {\n\n        return <>\n        {this.props.isFetching ? <Loader /> : null}\n        \n        <Users totalCount={this.props.totalCount}\n                      pageSize={this.props.pageSize}\n                      currentPage={this.props.currentPage}\n                      onPageChange={this.onPageChange}\n                      follow={this.props.follow}\n                      unfollow={this.props.unfollow}\n                      users={this.props.users}\n                      followingInProgress={this.props.followingInProgress}\n                      portionSize={this.props.portionSize}\n         />\n         \n         </>\n    }\n\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize:getPageSize(state),\n        totalCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching:  getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n        portionSize: getPortionSize(state)\n    }\n}\n\n export default compose(\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers }),\n    //withAuthRedirect\n)(UsersContainer)\n"],"sourceRoot":""}