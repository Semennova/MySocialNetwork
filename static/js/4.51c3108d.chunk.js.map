{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","alt","img","src","link","to","name","Message","message","maxLength10","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","btn","Dialogs","state","dialogsPage","dialogElements","dialogs","map","messagesElements","messages","isAuth","dialogItems","values","addMessage","newMessageText","compose","connect","dispatch","newMsgText","AddMessageActionCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,YAAc,6BAA6B,OAAS,wBAAwB,QAAU,yBAAyB,IAAM,qBAAqB,IAAM,uB,6FCapPC,EAVI,SAACC,GAChB,IAAIC,EAAI,mBAAeD,EAAME,IAC7B,OACI,sBAAKC,UAAWC,IAAEC,OAAlB,UACW,qBAAKC,IAAI,aAAaH,UAAWC,IAAEG,IAAKC,IAAI,6DAC/C,cAAC,IAAD,CAASL,UAAWC,IAAEK,KAAMC,GAAIT,EAAhC,mBAA0CD,EAAMW,YCMjDC,EAVC,SAACZ,GACb,OACI,sBAAKG,UAAWC,IAAES,QAAlB,UACW,qBAAKP,IAAI,aAAYH,UAAWC,IAAEG,IAAKC,IAAI,2EACjDR,EAAMa,Y,wCCoCbC,EAAcC,YAAiB,IAS/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAPE,SAACjB,GAC3B,OAAO,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACH,cAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,IAAUT,GAAcH,KAAK,iBAAiBa,UAAWC,IAAUC,YAAY,uBACjG,wBAAQvB,UAAWC,IAAEuB,IAArB,+BAMOC,EA9CC,SAAC5B,GAEb,IAAI6B,EAAQ7B,EAAM8B,YAEdC,EAAiBF,EAAMG,QAC1BC,KAAI,SAAA5B,GAAM,OAAI,cAAC,EAAD,CAA6BM,KAAMN,EAAOM,KAAMT,GAAIG,EAAOH,IAAzCG,EAAOH,OAEpCgC,EAAmBL,EAAMM,SAC5BF,KAAI,SAAApB,GAAO,OAAI,cAAC,EAAD,CAA0BA,QAASA,EAAQA,QAASX,GAAIW,EAAQX,IAAlDW,EAAQX,OAOtC,OAAIF,EAAMoC,OAMV,sBAAKjC,UAAWC,IAAE4B,QAAlB,UACI,qBAAK7B,UAAWC,IAAEiC,YAAlB,SACKN,IAGL,sBAAK5B,UAAWC,IAAE+B,SAAlB,UACKD,EACD,cAAClB,EAAD,CAAqBG,SAlBT,SAACmB,GACjBtC,EAAMuC,WAAWD,EAAOE,yBAKjB,cAAC,IAAD,CAAU9B,GAAG,Y,wBCKb+B,sBACXC,aAtBoB,SAACb,GACrB,MAAO,CACHC,YAAYD,EAAMC,YAClBK,SAAUN,EAAMC,YAAYK,SAC5BK,eAAgBX,EAAMC,YAAYU,mBAMf,SAACG,GACxB,MAAO,CACHJ,WAAY,SAACK,GACTD,EAASE,YAAwBD,SAUzCE,IAFWL,CAGbb","file":"static/js/4.51c3108d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__7yEQ6\",\"dialog\":\"Dialogs_dialog__3fuWp\",\"link\":\"Dialogs_link__3Zj7J\",\"dialogItems\":\"Dialogs_dialogItems__2hGUJ\",\"active\":\"Dialogs_active__2rqpf\",\"message\":\"Dialogs_message__nyuSM\",\"img\":\"Dialogs_img__100Sa\",\"btn\":\"Dialogs_btn__ceXZl\"};","import React from 'react'\nimport s from './../Dialogs.module.css'\nimport { NavLink } from 'react-router-dom'\n\nconst DialogItem = (props) => {\n    let path = `/dialogs/${props.id}`;\n    return (\n        <div className={s.dialog}>\n                   <img alt=\"img-avatar\" className={s.img} src=\"https://klike.net/uploads/posts/2019-03/1551511784_4.jpg\"/>  \n                <NavLink className={s.link} to={path}>{`${props.name}`}</NavLink> \n            </div>\n    )\n}\n\nexport default DialogItem","import React from 'react'\nimport s from './../Dialogs.module.css'\n\n\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>\n                   <img alt=\"msg-avatar\"className={s.img} src=\"https://trikky.ru/wp-content/blogs.dir/1/files/2020/07/30/original.jpg\"/>  \n            {props.message}\n        </div>\n    )\n}\n\n\nexport default Message","import React from 'react'\nimport s from './Dialogs.module.css'\nimport DialogItems from './DialogItem/DialogItem'\nimport Message from './Message/Message'\nimport { Redirect } from 'react-router'\nimport { Field, reduxForm } from 'redux-form'\nimport { Textarea } from '../../assets/FormControls/FormControls'\nimport { maxLengthCreator, required } from '../../utils/validators'\n\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogElements = state.dialogs\n    .map(dialog => <DialogItems key={dialog.id} name={dialog.name} id={dialog.id} />)\n    \n    let messagesElements = state.messages\n    .map(message => <Message key={message.id} message={message.message} id={message.id} />)\n\n    let addNewMessage = (values) => {\n        props.addMessage(values.newMessageText)\n       \n    }\n\n    if(!props.isAuth) {\n        return <Redirect to='/login' />\n    }\n\n    return (\n        \n    <div className={s.dialogs}>\n        <div className={s.dialogItems}>\n            {dialogElements}\n        </div>\n\n        <div className={s.messages}>\n            {messagesElements}\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\n        </div>  \n   \n    </div>\n    )\n}\n\nconst maxLength10 = maxLengthCreator(10)\n\nexport const AddMessageForm = (props) => {\n    return <form onSubmit={props.handleSubmit}>\n        <Field validate={[required, maxLength10]} name='newMessageText' component={Textarea} placeholder='Enter your message'/>\n        <button className={s.btn} >Add Message</button>\n    </form>\n}\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default Dialogs","import { AddMessageActionCreator } from '../../redux/dialogs-reducer'\nimport Dialogs from './Dialogs'\nimport { connect } from 'react-redux'\nimport { withAuthRedirect } from '../../../src/hoc/withAuthRedirect'\nimport { compose } from 'redux'\n\n\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsPage:state.dialogsPage,\n        messages: state.dialogsPage.messages,\n        newMessageText: state.dialogsPage.newMessageText,\n       \n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMsgText) => {\n            dispatch(AddMessageActionCreator(newMsgText))\n        }\n    }\n}\n\n\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n\n"],"sourceRoot":""}